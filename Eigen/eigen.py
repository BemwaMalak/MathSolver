#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Dec 25, 2021 11:09:14 PM CAT  platform: Windows NT

import sys
import tkinter as tk
from tkinter import font
import tkinter.ttk as ttk

from tkinter import messagebox
import numpy as np
from numpy.linalg import eig
py3 = True
from Eigen import eigen_support


import main_menu
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = Toplevel1 (root)
    eigen_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    eigen_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def back(self, top=None):
        top.destroy()
        main_menu.vp_start_gui()
    def show_info(self):
        messagebox.showinfo("Tutorial", "Enter a square matrix as following:\n(a11,a12,a21,a22.....)\n")
    def show_result(self, result1, result2):
        messagebox.showinfo("Result", "Eigen Values:\n" + str(result2) + '\n\n' + "Matrix of Eigen Victors:\n" + str(result1) + '\n')
    def calculate(self):
        if not self.Entry1.get():
            self.Label6.config(text = "Wrong Input")
            self.Label7.config(text = "Wrong Input")
            return
        s = self.Entry1.get()
        s = list(map(int, s.split(',')))
        n = len(s)

        if np.sqrt(n) * np.sqrt(n) != n:
            self.Label6.config(text = "Wrong Input")
            self.Label7.config(text = "Wrong Input")
            return
        mainL = list()
        for i in range(0, len(s), int(round(np.sqrt(n)))):
            mainL.append(s[i:i + int(round(np.sqrt(n)))])
        a = np.array(mainL)
        w,v = eig(a)

        self.Label6.config(text = w)
        self.Label7.config(text = v)

        self.show_result(v, w)

        


    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1080x720+261+91")
        top.minsize(120, 1)
        top.maxsize(1604, 881)
        top.resizable(0,  0)
        top.title("EigenValues / Vectors ")
        top.configure(borderwidth="2")
        top.configure(background="#ffffff")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.12, rely=0.261, height=311, width=244)
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 4.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img0)
        self.Label1.configure(text='''Label''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.444, rely=0.264, height=301, width=249)
        self.Label2.configure(activeforeground="#000000")
        self.Label2.configure(background="#ffffff")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 3.png")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.Label2.configure(image=_img1)
        self.Label2.configure(text='''Label''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.676, rely=0.263, height=301, width=254)
        self.Label3.configure(background="#ffffff")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 12.png")
        global _img2
        _img2 = tk.PhotoImage(file=photo_location)
        self.Label3.configure(image=_img2)
        self.Label3.configure(text='''Label''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.278, rely=0.083, height=72, width=493)
        self.Label4.configure(background="#ffffff")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 7.png")
        global _img3
        _img3 = tk.PhotoImage(file=photo_location)
        self.Label4.configure(image=_img3)
        self.Label4.configure(text='''Label''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.556, rely=0.931, height=41, width=454)
        self.Label5.configure(background="#ffffff")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 2.png")
        global _img4
        _img4 = tk.PhotoImage(file=photo_location)
        self.Label5.configure(image=_img4)
        self.Label5.configure(text='''Label''')

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.361, rely=0.75, height=74, width=257)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#ffffff")
        self.Button1.configure(borderwidth="0")
        self.Button1.configure(command=self.calculate)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 6.png")
        global _img5
        _img5 = tk.PhotoImage(file=photo_location)
        self.Button1.configure(image=_img5)
        self.Button1.configure(pady="0")
        self.Button1.configure(underline="0")

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.037, rely=0.917, height=44, width=37)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#ffffff")
        self.Button2.configure(borderwidth="0")
        self.Button2.configure(command=self.show_info)
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 1.png")
        global _img6
        _img6 = tk.PhotoImage(file=photo_location)
        self.Button2.configure(image=_img6)
        self.Button2.configure(pady="0")

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.917, rely=0.042, height=44, width=37)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#ffffff")
        self.Button3.configure(borderwidth="0")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(command=lambda: self.back(top))
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/1.Eigen Values/Asset 9.png")
        global _img7
        _img7 = tk.PhotoImage(file=photo_location)
        self.Button3.configure(image=_img7)
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''Button''')

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.131, rely=0.363, height=220, relwidth=0.198)
        self.Entry1.configure(background="white", justify='center')
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="Arial")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.462, rely=0.361, height=221, width=213)
        self.Label6.configure(background="#ffffff")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font="Arial")
        self.Label6.configure(foreground="#000000")

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.697, rely=0.365, height=211, width=209)
        self.Label7.configure(background="#ffffff")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font="Arial")
        self.Label7.configure(foreground="#000000")

if __name__ == '__main__':
    vp_start_gui()





