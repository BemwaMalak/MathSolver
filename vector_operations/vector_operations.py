#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Dec 26, 2021 01:59:53 AM CAT  platform: Windows NT

import sys
import numpy as np
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk


from tkinter import messagebox
try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

from vector_operations import vector_operations_support
sys.path.append("E:\MathProject")

import main_menu
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = Toplevel1 (root)
    vector_operations_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    vector_operations_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def back(self, top=None):
        top.destroy()
        main_menu.vp_start_gui()
    def show_info(self):
        messagebox.showinfo("Tutorial", "Enter each vector as following:\n(a11,a12,a13,a14.....)\n")
    def show_result(self, result1, result2):
        messagebox.showinfo("Result", "Dot-Product:\n" + str(result1) + '\nCross-Product:\n' + str(result2) + '\n')
    def calculate(self):
        v1 = self.Entry1.get()
        v2 = self.Entry2.get()

        if not v1 or not v2:
            self.Label7.config(text = "Wrong Input")
            self.Label8.config(text = "Wrong Input")
            return
        v1 = list(map(int, v1.split(',')))
        v2 = list(map(int, v2.split(',')))

        if len(v1) != len(v2):
            self.Label7.config(text = "Wrong Input")
            self.Label8.config(text = "Wrong Input")
            return

        
        self.Label7.config(text = np.dot(v1,v2))
        self.Label8.config(text = np.cross(v1,v2))
        self.show_result(np.dot(v1,v2), np.cross(v1,v2))
        

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1080x720+263+54")
        top.minsize(120, 1)
        top.maxsize(1604, 881)
        top.resizable(0,  0)
        top.title("Vector operations")
        top.configure(background="#ffffff")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.546, rely=0.917, height=31, width=438)
        self.Label1.configure(background="#ffffff")
        self.Label1.configure(cursor="fleur")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 2.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=_img0)
        self.Label1.configure(text='''Label''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.287, rely=0.083, height=61, width=424)
        self.Label2.configure(background="#ffffff")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 7.png")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.Label2.configure(image=_img1)
        self.Label2.configure(text='''Label''')

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.889, rely=0.069, height=34, width=37)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#ffffff")
        self.Button1.configure(borderwidth="0")
        self.Button1.configure(command=lambda: self.back(top))
        self.Button1.configure(cursor="arrow")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(highlightthickness="0")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 9.png")
        global _img2
        _img2 = tk.PhotoImage(file=photo_location)
        self.Button1.configure(image=_img2)
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Button''')

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.046, rely=0.917, height=34, width=37)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#ffffff")
        self.Button2.configure(borderwidth="0")
        self.Button2.configure(command=self.show_info)
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 1.png")
        global _img3
        _img3 = tk.PhotoImage(file=photo_location)
        self.Button2.configure(image=_img3)
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Button''')

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.361, rely=0.472, height=74, width=247)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#ffffff")
        self.Button3.configure(borderwidth="0")
        self.Button3.configure(command=self.calculate)
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 6.png")
        global _img4
        _img4 = tk.PhotoImage(file=photo_location)
        self.Button3.configure(image=_img4)
        self.Button3.configure(pady="0")

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.111, rely=0.181, height=201, width=244)
        self.Label3.configure(background="#ffffff")
        self.Label3.configure(borderwidth="0")
        self.Label3.configure(cursor="fleur")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 4.png")
        global _img5
        _img5 = tk.PhotoImage(file=photo_location)
        self.Label3.configure(image=_img5)

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.111, rely=0.569, height=190, width=243)
        self.Label4.configure(background="#ffffff")
        self.Label4.configure(cursor="fleur")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 13.png")
        global _img6
        _img6 = tk.PhotoImage(file=photo_location)
        self.Label4.configure(image=_img6)

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.639, rely=0.194, height=190, width=244)
        self.Label5.configure(background="#ffffff")
        self.Label5.configure(borderwidth="0")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 11.png")
        global _img7
        _img7 = tk.PhotoImage(file=photo_location)
        self.Label5.configure(image=_img7)

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.62, rely=0.569, height=190, width=283)
        self.Label6.configure(background="#ffffff")
        self.Label6.configure(borderwidth="0")
        self.Label6.configure(cursor="fleur")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        photo_location = os.path.join(prog_location,r"Assessts/calculators_assists/2.Vector Operations/Asset 14.png")
        global _img8
        _img8 = tk.PhotoImage(file=photo_location)
        self.Label6.configure(image=_img8)

        self.Entry1 = tk.Entry(top)
        self.Entry1.place(relx=0.119, rely=0.282, height=110, relwidth=0.207)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3", justify='center')
        self.Entry1.configure(font=("Arial", 20))
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")

        self.Entry2 = tk.Entry(top)
        self.Entry2.place(relx=0.119, rely=0.665, height=110, relwidth=0.207)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3", justify='center')
        self.Entry2.configure(font=("Arial", 20))
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(insertbackground="black")

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.648, rely=0.292, height=111, width=222)
        self.Label7.configure(background="#ffffff")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font=("Arial", 20))
        self.Label7.configure(foreground="#000000")

        self.Label8 = tk.Label(top)
        self.Label8.place(relx=0.648, rely=0.665, height=111, width=222)
        self.Label8.configure(background="#ffffff")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(font=("Arial", 20))
        self.Label8.configure(foreground="#000000")

if __name__ == '__main__':
    vp_start_gui()





